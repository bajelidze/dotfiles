issues:
  new: true
  new-from-rev: 161cec3160
  max-issues-per-linter: 0
  max-same-issues: 0

run:
  # Timeout for analysis, e.g. 30s, 5m.
  timeout: 5m

  # Which dirs to skip: issues from them won't be reported.
  # Can use regexp here: `generated.*`, regexp is applied on full path.
  skip-dirs:
    - modules/azure # Remove after #1049 is fixed
    - modules/play/ps/state # Remove after #1049 is fixed

  # Which files to skip: they will be analyzed, but issues from them won't be reported.
  skip-files:
    - modules/ps/arm.go # Remove after #1049 is fixed

linters:
  enable-all: true
  # Disable specific linter
  # https://golangci-lint.run/usage/linters/#disabled-by-default-linters--e--enable
  disable:
    - errcheck
    - promlinter # because of webtty; to be fixed
    - exhaustivestruct # zero values are encouraged by go
    - exhaustruct
    - cyclop # too restrictive
    - funlen # too restrictive
    - gocognit # too restrictive
    - nestif # too restrictive

    # to be fixed:
    - gochecknoglobals
    - goerr113
    - gomnd
    - gochecknoinits
    - ireturn

linters-settings:
  gci:
    sections:
        - standard
        - default
        - prefix(github.com/exasol/ccc)
    skip-generated: false
    custom-order: true

  gosec:
    excludes:
      - G204

  wrapcheck:
    ignoreSigs:
      - .Errorf(
      - errors.New(
      - errors.Unwrap(
      - .Wrap(
      - .Wrapf(
      - .WithMessage(
      - .WithMessagef(
      - .WithStack(
      - errw.FuncName
      - fun.MapErr

  nlreturn:
    block-size: 2

output:
  # Print lines of code with issue.
  print-issued-lines: false

  # Sort results to make it easier to methodically fix lots of issues at once.
  sort-results: true
